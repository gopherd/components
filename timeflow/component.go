// Code generated by "next 0.0.4"; DO NOT EDIT.

package timeflow

import "time"
import "github.com/gopherd/core/types"
import "github.com/gopherd/core/op"

var _ = (*time.Time)(nil)
var _ = (*types.Duration)(nil)
var _ = op.SetOr[any]

// Name represents the timeflow component name.
const Name = "github.com/gopherd/components/timeflow";

type Options struct {
	InitialOffset types.Duration
	HTTPPath string
}

func (x *Options) OnLoaded() {
}

// Component represents a time flow management component.
// It provides methods to manage time offsets and adjustments.
type Component interface {
	// Offset returns the current time offset.
	Offset() time.Duration
	// SetOffset sets a new time offset.
	SetOffset(duration time.Duration)
	// Now returns the current time adjusted by the component's offset.
	Now() time.Time
	// Adjust applies the component's offset to the given time.
	Adjust(t time.Time) time.Time
}
