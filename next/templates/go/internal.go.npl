{{- define "meta/path"}}{{this.Package.Name}}/internal/{{this.Package.Name}}.go{{end -}}
{{- define "meta/skip"}}{{exist meta.path}}{{end -}}
{{- define "meta/_objName"}}{{printf "%sComponent" (render "node:pascal.case.name" this.Package)}}{{end -}}

{{- define "go/dict:import.statement"}}
{{with .name}}{{.}} {{end}}"{{.value}}"
{{- end -}}

{{- define "go/interface"}}
{{if eq "Component" .Name -}}
// Ensure *{{meta._objName}} implements {{this.Package.Name}}.Component interface.
var _ {{this.Package.Name}}.Component = (*{{meta._objName}})(nil)
{{range .Methods.List}}
// {{.Name}} implements {{this.Package.Name}}.Component.{{.Name}}.
func (c *{{meta._objName}}) {{render "interface.method:name" .}}({{next .Params}}){{next .Result}} {
	panic("TODO: not implemented")
}
{{end -}}
{{end -}}
{{end -}}

package {{this.Package.Name}}

import (
	"context"
	{{render "imports:declarations" this.Package.Imports | align}}
	{{"github.com/gopherd/core/component" | quote | indent}}

	"github.com/gopherd/components/{{this.Package.Name}}"
)

func init() {
	component.Register({{this.Package.Name}}.Name, func() component.Component {
		return &{{meta._objName}}{}
	})
}

// {{meta._objName}} implements {{this.Package.Name}}.Component.
type {{meta._objName}} struct {
	component.BaseComponent[{{this.Package.Name}}.Options]
}

// Init implements component.Component.Init.
func (c *{{meta._objName}}) Init(ctx context.Context) error {
	panic("TODO: implement the Init method or remove it if not needed")
}

// Uninit implements component.Component.Uninit.
func (c *{{meta._objName}}) Uninit(ctx context.Context) error {
	panic("TODO: implement the Uninit method or remove it if not needed")
}

// Start implements component.Component.Start.
func (c *{{meta._objName}}) Start(ctx context.Context) error {
	panic("TODO: implement the Start method or remove it if not needed")
}

// Shutdown implements component.Component.Shutdown.
func (c *{{meta._objName}}) Shutdown(ctx context.Context) error {
	panic("TODO: implement the Shutdown method or remove it if not needed")
}
{{render "go/interfaces" this.Package.Decls.Interfaces}}